Testing documentation
Create 1 document per team, within the milestones folder in the project directory, that describes how, at least, 3 features within your finished product will be tested.

	The three different routes that we will be testing are:
	1. Register
	2. Add trip
	3. Delete trip
	The reason for these features to be tested over others is specifically because they are integral to the 	functionality of the website. With out these features the project is just a pretty webpage.

The test plans should include specific test cases (user acceptance test cases) that describe the data and the user activity that will be executed in order to verify proper functionality of the feature.
	
Test 1: This test should show that it is possible to add users into the data base. The tester should be testing the "register" page to see if they can register a new user into the database. They will do this with a set of test data which includes [username: "Test", password: 1234, fristname: "Testing", lastname: "Tester", email: "testing@gmail.com] and a user defined set of data for stress testing. This can be any information they want that pertains to the given catigories like the data listed before. The environment that will be used for testing is the current main branch of our project repository once it has been set up with docker and hosted on local or web based machine. The application should function for the tester exactly as it would for a user of the application. The results that are to be expected by the tester are, the application allows them to register and they can then log in on the redirected page to gain access to the site. The tester for this feature will be Lucas Drager.
	
Test 2: This test should show that it is possible to add trips into the data base. The tester should be testing the "make trips" page to see if they can register a new trip into the database. They will do this with a set of test data which includes [To: "Denver, CO", From: "New York, NY"] and a user defined set of data for stress testing. This can be any two locations they can think of. The environment that will be used for testing is the current main branch of our project repository once it has been set up with docker and hosted on local or web based machine. The application should function for the tester exactly as it would for a user of the application. The results that are to be expected by the tester are, the application allows them to register and they can then log in on the redirected page to gain access to the site. The tester for this feature will be Lucas Drager.
	
Test 3: This test should show that it is possible to delte a trip from the data base. The tester should be testing the "home" page to see if they can delete trips that they are part of from the database. They will do this with by simply clicking buttons on the homepage that delete the user from the trip.The buttons should completely delete a trip if the user in question is the owner but if the user is just a part of a trip they simply will no longer be part of that trip. Though in both cases the user should no longer see the trips that cancled.left from. The environment that will be used for testing is the current main branch of our project repository once it has been set up with docker and hosted on local or web based machine. The application should function for the tester exactly as it would for a user of the application. The results that are to be expected by the tester are, the application allows them to register and they can then log in on the redirected page to gain access to the site. The tester for this feature will be Lucas Drager.
